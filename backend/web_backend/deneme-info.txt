users/register for patient type
{
    "first_name": "ayse",
    "last_name": "tak",
    "email": "ayse1@gmail.com",
    "password": "930615Fly",
    "user_type": "patient"
}
users/register for medical center type
{
    "first_name": "doktor",
    "last_name": "biri",
    "email": "medical@gmail.com",
    "password": "930615Fly",
    "user_type": "medical-center"
}
{
    "first_name": "felix",
    "last_name": "dupain",
    "email": "hospital@gmail.com",
    "password": "930615Fly",
    "user_type": "medical-center"
}

users/login
{
 "email": "ayse1@gmail.com",
"password": "930615Fly"
}
{ -> 11 id
 "email" : "medical@gmail.com",
"password" : "930615Fly"
}
{ -> 13 id
 "email" : "hospital@gmail.com",
"password" : "930615Fly"
}

users/change-password
{
"old_password" : "930615Fly",
"new_password1" : "591003Black",
"new_password2" : "591003Black"
}

users/update-email
{
"password" : "930615Fly",
"new_email" : "biri@example.com"
}

patient/me POST
{
    "gender": "w",
    "birthday": "2000-2-7",
    "phone_number": "+905323936604",
    "country": "TR",
    "city": "Samsun"
}
{
    "gender": "w",
    "birthday": "2000-3-11",
    "phone_number": "+905061400604"
}

medical-center/profile PUT
{
    "user": 11,
    "center_name": "Awesome Medical Center",
    "center_type": "Hosp",
    "city": "İSTANBUL", 
    "contact_number": "+905555555555",
    "mail_address": "info@medicalcenter.com",
    "web_site": "https://medicalcenter.com",
    "preview_text": "Lorem ipsum...",
    "overview_text": "Details about the medical center...",
    "specialities": [5, 10],
    "procedures": [12, 1],
    "contracted_health_institutions": [2, 3]
}
{
    "user": 13,
    "center_name": "Grand Clinic",
    "center_type": "Clin",
    "city": "SAMSUN", 
    "contact_number": "+905555555555",
    "mail_address": "info@medicalcenter.com",
    "web_site": "https://medicalcenter.com",
    "preview_text": "Lorem ipsum...",
    "overview_text": "Details about the linic...",
    "specialities": [63, 64, 71, 95],
    "procedures": [47,48,49,51,52,53, 89, 90, 91, 93, 102],
    "contracted_health_institutions": [2, 3, 4]
}

medical-center/profile PATCH change some of these infos
{
    "center_name": "",
    "center_type": "",
    "city": "",
    "contact_number": "",
    "mail_address": "",
    "web_site": "",
    "preview_text": "",
    "overview_text": ""
}

medical-center/doctors POST
{
    "doctors" : [
    {
        "name" : "serhat",
        "surname" : "koçer",
        "title" : "Dr.",
        "major" : "AT",
        "minor" : "Anes"
    },
    {
        "name" : "faruk",
        "surname" : "necip",
        "title" : "Prof. Dr.",
        "major" : "Aest"
    }
]
}
medical-center/profile/doctors POST for one doctor record
{
    "doctors" : [
        {
            "name" : "serhat",
            "surname" : "koçer",
            "title" : "Dr.",
            "major" : "AT",
            "minor" : "Anes"
        }
    ]
}

medical-center/profile/doctors/<id> PATCH 
{
        "name" : "serhat",
        "surname" : "koçer",
        "title" : "Dr.",
        "major" : "AT",
        "minor" : "Anes"
    }

medical-center/profile/doctors/  multiple doctor deletion
{
"ids" : [2,3]
}


medical-center/profile/specialities/ POST
speciality and procedure adding 
{
"specialities": [62],
"procedures": [42,43]
}

only procedure adding
{
"procedures": [31]
}

only speciality adding
{
"specialities": [63]
}


medical-center/profile/insurances POST
{
    "contracted_health_institutions": [4]
}

/medical-center/profile/videos/ POST
{
    "videos": [
                {
                    "video_name" : "video-1.mp4",
                    "video_link" : "https://www.youtube.com/watch?v=qrBWZ8ARD_s"
                }, 
                {
                    "video_name" : "video-2.mp4",
                    "video_link" : "https://www.youtube.com/watch?v=onu_L56p_80"
                }
            ]
}

/medical-center/profile/photos/ POST
must be tested on postman

on postman
send POST request to http://127.0.0.1:8000/api/token/ with medical center login data given above.
other http request methods authorization type should be Bearer token 
here paste the access_token which is given in the api/token to Token. 
then you free to send request any medical center prefix urls



/specialities/<int:speciality_id>/<int:procedure_id> GET 
http://127.0.0.1:8000/specialities?speciality=Cancer Treatment


/medical-centers/? query for filtering GET
http://127.0.0.1:8000/medical-centers/filter/?center_location=1
http://127.0.0.1:8000/medical-centers/filter/?center_type=Hosp
http://127.0.0.1:8000/medical-centers/filter/?procedure=43
http://127.0.0.1:8000/medical-centers/filter/?speciality=60
&speciality=60
&procedure=43
&center_type=Hosp
&center_type=Clin


medical-centers/id/ POST -> redirect -> /patient/medical-center-request/id POST
{
    "speciality"      : 62,
    "procedure"       : 43,
    "name"            : "Ayse",
    "surname"         : "Tak",
    "gender"        : "w",
    "birthday"      : "2000-2-7",
    "phone"         : "+905323936604",
    "email"         : "aysenurtak1@gmail.com",
    "country"       : "TR",
    "city"          : "Samsun",
    "disease_history"     : "Started on five months ago.",
    "previous_disease"    : "-",
    "previous_surgery"    : "-",
    "previous_treatment"  : "-",
    "other_comments"      : "-"
}
/patient/requests/ POST
{
    "medical_center"  : 1,
    "speciality"      : 62,
    "procedure"       : 43,
    "name"            : "Ayse",
    "surname"         : "Tak",
    "gender"        : "w",
    "birthday"      : "2000-2-7",
    "phone"         : "+905323936604",
    "email"         : "aysenurtak1@gmail.com",
    "country"       : "TR",
    "city"          : "Samsun",
    "disease_history"     : "Started on five months ago.",
    "previous_disease"    : "-",
    "previous_surgery"    : "-",
    "previous_treatment"  : "-",
    "other_comments"      : "-"
}


requests/filter GET 
http://127.0.0.1:8000/medical-center/requests/filter/?speciality=60
&speciality=60
&procedure=33




/admin 
aysenurtak1@gmail.com
930615fly 



http://127.0.0.1:8000/admin-dashboard/specialities/ POST 
{
    "name" : "In Vitro Fertilization Center",
    "code" : "IVFCenter"
}

http://127.0.0.1:8000/admin-dashboard/specialities/ POST 
{
    "name" : "Bipolar disorder",
    "code" : "Psych-1",
    "speciality" : 90
}

http://127.0.0.1:8000/admin-dashboard/insurances/ POST
{
    "name" : "Sosyal Güvenlik Kurumu",
    "code" : "SGK"
}

http://127.0.0.1:8000/admin-dashboard/destinations/ POST 
{
    "name" : "KARS"
}


admin-dashboard/requests/filter GET 
http://127.0.0.1:8000/admin-dashboard/requests/filter/? 

&speciality=60
&procedure=33
&medcent=1
&country=TR
&city=SAMSUN

admin-dashboard/medical-centers/filter GET
http://127.0.0.1:8000/admin-dashboard/medical-centers/filter/?city=2



admin-dashboard/patient/filter/ GET
http://127.0.0.1:8000/admin-dashboard/patient/filter/?country=TR&city=Samsun
&country=TR
&city=Samsun






















@swagger_auto_schema(
        operation_description="User login",
        request_body=openapi.Schema(
            type=openapi.TYPE_OBJECT,
            properties={
                'email': openapi.Schema(type=openapi.TYPE_STRING, description='User email'),
                'password': openapi.Schema(type=openapi.TYPE_STRING, description='User password')
            },
            required=['email', 'password']
        ),
        responses={
            200: openapi.Response(
                description="Login successful, JWT returned",
                schema=openapi.Schema(
                    type=openapi.TYPE_OBJECT,
                    properties={
                        'jwt': openapi.Schema(type=openapi.TYPE_STRING, description='JWT token')
                    },
                    example={
                        'jwt': 'your_jwt_token_here'
                    }
                )
            ),
            400: openapi.Response(
                description="Invalid credentials",
                schema=openapi.Schema(
                    type=openapi.TYPE_OBJECT,
                    properties={
                        'detail': openapi.Schema(type=openapi.TYPE_STRING, description='Error details')
                    },
                    example={
                        'detail': 'Invalid credentials'
                    }
                )
            )
        }
    )

    @swagger_auto_schema(
        operation_description="Specialities List Endpoint, (no need to authentication)",
        responses={
            200: openapi.Response(
                description="Specialities List Successfully Created",
                schema=openapi.Schema(
                    type=openapi.TYPE_ARRAY,
                    items=openapi.Schema(
                        type=openapi.TYPE_OBJECT,
                        properties={
                            'id': openapi.Schema(type=openapi.TYPE_INTEGER),
                            'name': openapi.Schema(type=openapi.TYPE_STRING),
                            'code': openapi.Schema(type=openapi.TYPE_STRING),
                            'procedures': openapi.Schema(
                                type=openapi.TYPE_ARRAY,
                                items=openapi.Schema(
                                    type=openapi.TYPE_OBJECT,
                                    properties={
                                        'id': openapi.Schema(type=openapi.TYPE_INTEGER),
                                        'name': openapi.Schema(type=openapi.TYPE_STRING),
                                        'code': openapi.Schema(type=openapi.TYPE_STRING)
                                    }
                                )
                            )
                        }
                    ),
                    example=[
                                {
                                    "id": 58,
                                    "name": "Addiction Treatment",
                                    "code": "AT",
                                    "procedures": [
                                        {
                                            "id": 2,
                                            "name": "Alcohol addiction treatment",
                                            "code": "AT-1"
                                        },
                                        {
                                            "id": 3,
                                            "name": "Drug addiction treatment",
                                            "code": "AT-2"
                                        },
                                    ]
                                }
                            ]
                )
            ),
            404: openapi.Response(
                description="Speciality not found",
                schema=openapi.Schema(
                    type=openapi.TYPE_OBJECT,
                    properties={
                        'detail': openapi.Schema(type=openapi.TYPE_STRING, description='Error details')
                    },
                    example={
                        "detail": "Not found any speciality record!"
                    }
                )
            )
        }
    )
